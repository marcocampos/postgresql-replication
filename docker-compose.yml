name: postgresql-cluster
services:
  postgres_primary:
    image: postgres:17
    container_name: postgres_primary
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${PRIMARY_PASSWORD:-postgres}
      POSTGRES_DB: ${PRIMARY_DB:-postgres}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      REPLICATION_USER: ${REPLICATION_USER:-replicator}
      REPLICATION_PASSWORD: ${REPLICATION_PASSWORD:-replicatorpass}
    volumes:
      - primary_data:/var/lib/postgresql/data
      - ./scripts/primary-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 5s
      retries: 2
    ports:
      - "5432:5432"
    networks:
      - postgres

  postgres_replica:
    image: postgres:17
    container_name: postgres_replica
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${REPLICA_PASSWORD:-replicapass}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      PGUSER: ${REPLICATION_USER:-replicator}
      PGPASSWORD: ${REPLICATION_PASSWORD:-replicatorpass}
    volumes:
      - replica_data:/var/lib/postgresql/data
      - ./scripts/replica-init:/docker-entrypoint-initdb.d
    depends_on:
      postgres_primary:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 5s
      retries: 2
    ports:
      - "5433:5432"
    networks:
      - postgres

volumes:
  primary_data:
  replica_data:

networks:
  postgres:
    driver: bridge
